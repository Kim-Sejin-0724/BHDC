text(x = x_center, y = y_top * 0.80, labels = "(e) South Han River Basin",
cex = 2.5, font = 2, pos = 3)
text(x = x_center, y = y_top * 0.65, labels = "N = 230, bins = 70",
cex = 2.3, font = 2, pos = 3)
dev.off()
png('SPD_SHRB.png',width=9000,height=3000,res=500)
par(mar=c(5,7,1,1), oma=c(4,6,1,1))
years <- as.numeric(row.names(SPD_SHRB))
plot(NULL,xlim=rev(range(years)), ylim=ylim_range,
type='l',xaxt='n',ylab='',xlab='',las=1,cex.axis=3,cex.lab=2.5)
axis(1, at=seq(3500, 1200, by=-100), labels=seq(35, 12, by=-1), cex.axis=2.5, padj=1.2, tck=-0.04, lwd=3, font=2)
axis(2,las=1, cex.axis=3, tck=-0.02, lwd=3, font=2)
mtext(side=1, text='kyr cal BP',line=6.5, cex=2.5, font=2)
mtext(side=2, at=max(SPD_SHRB[,1])/2,text='PD',las=0,cex=2.5, line=9,font=2)
polygon(c(min(years),years,max(years)),c(0,SPD_SHRB[,1],0),col="light grey",border="darkgrey")
lines(CPL5_SHRB$year,CPL5_SHRB$pdf,col="#5D3A9B",lwd=6)
plot(SHRB.spd.bins,xaxt='n',runm=100,add=TRUE,type="simple",col="#E66100",lwd=6,lty=2, border="black")
legend("topleft",legend=c("ADMUR", "rcarbon"),
col=c("#5D3A9B", "#E66100"),lty=c(1,2),lwd=c(6,6), bty='n', cex=2.5)
x_center <- mean(range(years))
y_top <- max(CPL5_SHRB$pdf)
text(x = x_center, y = y_top * 0.95, labels = "(e) South Han River Basin",
cex = 2.5, font = 2, pos = 3)
text(x = x_center, y = y_top * 0.75, labels = "N = 230, bins = 70",
cex = 2.3, font = 2, pos = 3)
dev.off()
################# ADMUR: STEP5 Calculating CPL For West Coast (Figure 4f) ###########
# Filter Data
WC <- newData %>% filter(Sub_Region == "West Coast") #274
load('results_WC.RData')
## Drawing SPD with ADMUR and rcarbon
CPL1_WC <- convertPars(pars=CPL1_WC$par, years=1200:3500, type='CPL')
CPL2_WC <- convertPars(pars=CPL2_WC$par, years=1200:3500, type='CPL')
CPL3_WC <- convertPars(pars=CPL3_WC$par, years=1200:3500, type='CPL')
CPL4_WC <- convertPars(pars=CPL4_WC$par, years=1200:3500, type='CPL')
CPL5_WC <- convertPars(pars=CPL5_WC$par, years=1200:3500, type='CPL')
CPL6_WC <- convertPars(pars=CPL6_WC$par, years=1200:3500, type='CPL')
EXP_WC <- convertPars(pars=exp_WC$par, years=1200:3500, type='exp')
#Calibration with rcarbon for rolling mean
WC.caldates=calibrate(x=WC$age, errors=WC$sd, calCurves='intcal20')
WC.bins = rcarbon::binPrep(sites=WC$site,ages=WC$age, h=200)
length(unique(WC.bins)) #69
WC.spd.bins = spd(WC.caldates,bins=WC.bins,timeRange=c(3500,1200), spdnormalised=TRUE)
ylim_range <- c(0, max(c(SPD_WC[,1], CPL4_WC$pdf)) * 1.1)
png('SPD_WC.png',width=9000,height=3000,res=500)
par(mar=c(5,7,1,1), oma=c(4,6,1,1))
years <- as.numeric(row.names(SPD_WC))
plot(NULL,xlim=rev(range(years)), ylim=ylim_range,
type='l',xaxt='n',ylab='',xlab='',las=1,cex.axis=3,cex.lab=2.5)
axis(1, at=seq(3500, 1200, by=-100), labels=seq(35, 12, by=-1), cex.axis=2.5, padj=1.2, tck=-0.04, lwd=3, font=2)
axis(2,las=1, cex.axis=3, tck=-0.02, lwd=3, font=2)
mtext(side=1, text='kyr cal BP',line=6.5, cex=2.5, font=2)
mtext(side=2, at=max(SPD_WC[,1])/2,text='PD',las=0,cex=2.5, line=9,font=2)
polygon(c(min(years),years,max(years)),c(0,SPD_WC[,1],0),col="light grey",border="darkgrey")
lines(CPL4_WC$year,CPL4_WC$pdf,col="#5D3A9B",lwd=6)
plot(WC.spd.bins,xaxt='n',runm=100,add=TRUE,type="simple",col="#E66100",lwd=6,lty=2, border="black")
legend("topleft",legend=c("ADMUR", "rcarbon"),
col=c("#5D3A9B", "#E66100"),lty=c(1,2),lwd=c(6,6), bty='n', cex=2.5)
x_center <- mean(range(years))
y_top <- max(CPL4_WC$pdf)
text(x = x_center, y = y_top * 0.7, labels = "(f) West Coast",
cex = 2.5, font = 2, pos = 3)
text(x = x_center, y = y_top * 0.55, labels = "N = 274, bins = 69",
cex = 2.3, font = 2, pos = 3)
dev.off()
png('SPD_WC.png',width=9000,height=3000,res=500)
par(mar=c(5,7,1,1), oma=c(4,6,1,1))
years <- as.numeric(row.names(SPD_WC))
plot(NULL,xlim=rev(range(years)), ylim=ylim_range,
type='l',xaxt='n',ylab='',xlab='',las=1,cex.axis=3,cex.lab=2.5)
axis(1, at=seq(3500, 1200, by=-100), labels=seq(35, 12, by=-1), cex.axis=2.5, padj=1.2, tck=-0.04, lwd=3, font=2)
axis(2,las=1, cex.axis=3, tck=-0.02, lwd=3, font=2)
mtext(side=1, text='kyr cal BP',line=6.5, cex=2.5, font=2)
mtext(side=2, at=max(SPD_WC[,1])/2,text='PD',las=0,cex=2.5, line=9,font=2)
polygon(c(min(years),years,max(years)),c(0,SPD_WC[,1],0),col="light grey",border="darkgrey")
lines(CPL4_WC$year,CPL4_WC$pdf,col="#5D3A9B",lwd=6)
plot(WC.spd.bins,xaxt='n',runm=100,add=TRUE,type="simple",col="#E66100",lwd=6,lty=2, border="black")
legend("topleft",legend=c("ADMUR", "rcarbon"),
col=c("#5D3A9B", "#E66100"),lty=c(1,2),lwd=c(6,6), bty='n', cex=2.5)
x_center <- mean(range(years))
y_top <- max(CPL4_WC$pdf)
text(x = x_center, y = y_top * 1.1, labels = "(f) West Coast",
cex = 2.5, font = 2, pos = 3)
text(x = x_center, y = y_top * 0.9, labels = "N = 274, bins = 69",
cex = 2.3, font = 2, pos = 3)
dev.off()
SG.ylim_range <- c(0, max(c(SPD_SG[,1], CPL6_SG$pdf)) * 1.1)  # 10% 여유 둠
library(here)
library(dplyr)
library(ggplot2)
library(readr)
library(stringr)
library(tidyr)
library(ggsci)
library(patchwork)
library(here)
# 데이터 읽기
Data <- read_csv(here("After_Combine.csv"))
here()
# 데이터 읽기
Data <- read_csv(here("Data","After_Combine.csv"))
Data_clean <- Data %>% filter(is.na(Mismatch_Flag))
Site_Minmax <- Data_clean %>%
group_by(Site_Code, Sub_Region, Total_Houses, Period_New) %>%
summarise(
median_min = min(median, na.rm = TRUE),
median_max = max(median, na.rm = TRUE),
.groups = "drop"
)
here()
Data<- read.csv(here("Data", "/After_Combine.csv"))
library(rcarbon)
library(dplyr)
library(sf)
library(spatstat)
Data<- read.csv(here("Data", "/After_Combine.csv"))
# Loading map
# http://www.gisdeveloper.co.kr/?p=2332
map_korea <- st_read(here("ctprvn_20230729", "CTPRVN.shp"))
map_korea$CTPRVN_CD <- iconv(map_korea$CTPRVN_CD,
from = 'CP949',
to = 'UTF-8',
sub = NA)
# 2. Filtering for Han River basin
target_region_codes <- c('11', '41', '51')
subset_map <- map_korea %>% filter(CTPRVN_CD %in% target_region_codes)
# 3. Sf to spatial
subset_map_sp <- as(subset_map, "Spatial")
class(subset_map_sp)
Han_River_Basin<- as.owin(subset_map_sp)
library(rcarbon)
library(dplyr)
library(sf)
library(spatstat)
Data<- read.csv(here("Data", "/After_Combine.csv"))
# Excluding outliers
Data_clean <- Data %>% filter(is.na(Mismatch_Flag)) %>% filter(!is.na(Longitude) & !is.na(Latitude))
# Loading map
# http://www.gisdeveloper.co.kr/?p=2332
map_korea <- st_read(here("ctprvn_20230729", "CTPRVN.shp"))
map_korea$CTPRVN_CD <- iconv(map_korea$CTPRVN_CD,
from = 'CP949',
to = 'UTF-8',
sub = NA)
# 2. Filtering for Han River basin
target_region_codes <- c('11', '41', '51')
subset_map <- map_korea %>% filter(CTPRVN_CD %in% target_region_codes)
# 3. Sf to spatial
subset_map_sp <- as(subset_map, "Spatial")
class(subset_map_sp)
Han_River_Basin<- as.owin(subset_map_sp)
plot(Han_River_Basin)
#Converting
convert_to_EPSG5179 <- function(data, lon_col, lat_col) {
crs_wgs84 <- st_crs(4326)
crs_korea2000 <- st_crs(5179)
input_sf <- st_as_sf(data.frame(longitude = data[[lon_col]], latitude = data[[lat_col]]),
coords = c("longitude", "latitude"), crs = crs_wgs84)
output_sf <- st_transform(input_sf, crs = crs_korea2000)
output_df <- st_coordinates(output_sf)
cbind(data, output_df)
}
dir.create(file.path("im"), showWarnings = FALSE)
mapData <- convert_to_EPSG5179(Data_clean, lon_col = "Longitude", lat_col = "Latitude")
mapData.cal <- calibrate(x=mapData$BP, errors=mapData$error, normalised=TRUE)
stkde <- stkde(x=mapping, coords=mapB2[,c("X","Y")],
win=Han_River_Basin, sbw=40000, cellres=5000, focalyears=seq(3500, 1100, -200),
tbw=50, bins=NA, backsight=200, outdir="im")
png("HanRiverBasinfocalchange3500-1100.png",width=9000,height=6000,res=500)
par(mfrow=c(3,4), mar=c(2,2,3,1))
stkde <- stkde(x=mapData.cal, coords=mapB2[,c("X","Y")],
win=Han_River_Basin, sbw=40000, cellres=5000, focalyears=seq(3500, 1100, -200),
tbw=50, bins=NA, backsight=200, outdir="im")
stkde <- stkde(x=mapData.cal, coords=mapData[,c("X","Y")],
win=Han_River_Basin, sbw=40000, cellres=5000, focalyears=seq(3500, 1100, -200),
tbw=50, bins=NA, backsight=200, outdir="im")
png("HanRiverBasinfocalchange3500-1100.png",width=9000,height=6000,res=500)
par(mfrow=c(3,4), mar=c(2,2,3,1))
plot(stkde, 3500, type="change",cex.main=3, cex.axis=1.8,font=2, main="(a) 3500-3300 cal BP")
plot(stkde, 3300, type="change",cex.main=3, cex.axis=1.8,font=2, main="(b) 3300-3100 cal BP")
plot(stkde, 3100, type="change",cex.main=3, cex.axis=1.8,font=2,main="(c) 3100-2900 cal BP")
plot(stkde, 2900, type="change",cex.main=3, cex.axis=1.8,font=2, main="(d) 2900-2700 cal BP")
plot(stkde, 2700, type="change",cex.main=3, cex.axis=1.8,font=2, main="(e) 2700-2500 cal BP")
plot(stkde, 2500, type="change",cex.main=3, cex.axis=1.8,font=2, main="(f) 2500-2300 cal BP")
plot(stkde, 2300, type="change",cex.main=3, cex.axis=1.8,font=2, main="(g) 2300-2100 cal BP")
plot(stkde, 2100, type="change",cex.main=3, cex.axis=1.8,font=2, main="(h) 2100-1900 cal BP")
plot(stkde, 1900, type="change",cex.main=3, cex.axis=1.8,font=2, main="(i) 1900-1700 cal BP")
plot(stkde, 1700, type="change",cex.main=3, cex.axis=1.8,font=2, main="(j) 1700-1500 cal BP")
plot(stkde, 1500, type="change",cex.main=3, cex.axis=1.8,font=2, main="(k) 1500-1300 cal BP")
plot(stkde, 1300, type="change",cex.main=3, cex.axis=1.8,font=2, main="(l) 1300-1100 cal BP")
dev.off()
png("HanRiverBasinfocalchange3500-1100.png",width=9000,height=6000,res=500)
par(mfrow=c(3,4), mar=c(2,2,3,1))
plot(stkde, 3500, type="change",cex.main=3, cex.axis=1.8,font=2, main="(a) 3500-3300 cal BP")
plot(stkde, 3300, type="change",cex.main=3, cex.axis=1.8,font=2, main="(b) 3300-3100 cal BP")
plot(stkde, 3100, type="change",cex.main=3, cex.axis=1.8,font=2,main="(c) 3100-2900 cal BP")
plot(stkde, 2900, type="change",cex.main=3, cex.axis=1.8,font=2, main="(d) 2900-2700 cal BP")
plot(stkde, 2700, type="change",cex.main=3, cex.axis=1.8,font=2, main="(e) 2700-2500 cal BP")
plot(stkde, 2500, type="change",cex.main=3, cex.axis=1.8,font=2, main="(f) 2500-2300 cal BP")
plot(stkde, 2300, type="change",cex.main=3, cex.axis=1.8,font=2, main="(g) 2300-2100 cal BP")
plot(stkde, 2100, type="change",cex.main=3, cex.axis=1.8,font=2, main="(h) 2100-1900 cal BP")
plot(stkde, 1900, type="change",cex.main=3, cex.axis=1.8,font=2, main="(i) 1900-1700 cal BP")
plot(stkde, 1700, type="change",cex.main=3, cex.axis=1.8,font=2, main="(j) 1700-1500 cal BP")
plot(stkde, 1500, type="change",cex.main=3, cex.axis=1.8,font=2, main="(k) 1500-1300 cal BP")
plot(stkde, 1300, type="change",cex.main=3, cex.axis=1.8,font=2, main="(l) 1300-1100 cal BP")
dev.off()
getwd()
png("HanRiverBasinfocalintensity3500-1100.png",width=9000,height=6000,res=500)
par(mfrow=c(3,4), mar=c(2,2,3,1))
plot(stkde, 3500, type="focal",cex.main=3, cex.axis=1.8,main="(a) 3500-3300 cal BP")
plot(stkde, 3300, type="focal",cex.main=3, cex.axis=1.8,main="(b) 3300-3100 cal BP")
plot(stkde, 3100, type="focal",cex.main=3, cex.axis=1.8,main="(c) 3100-2900 cal BP")
plot(stkde, 2900, type="focal",cex.main=3, cex.axis=1.8, main="(d) 2900-2700 cal BP")
plot(stkde, 2700, type="focal",cex.main=3, cex.axis=1.8, main="(e) 2700-2500 calBP")
plot(stkde, 2500, type="focal",cex.main=3, cex.axis=1.8, main="(f) 2500-2300 cal BP")
plot(stkde, 2300, type="focal",cex.main=3, cex.axis=1.8, main="(g) 2300-2100 cal BP")
plot(stkde, 2100, type="focal",cex.main=3, cex.axis=1.8, main="(h) 2100-1900 cal BP")
plot(stkde, 1900, type="focal",cex.main=3, cex.axis=1.8, main="(i) 1900-1700 cal BP")
plot(stkde, 1700, type="focal",cex.main=3, cex.axis=1.8, main="(j) 1700-1500 cal BP")
plot(stkde, 1500, type="focal",cex.main=3, cex.axis=1.8, main="(k) 1500-1300 cal BP")
plot(stkde, 1300, type="focal",cex.main=3, cex.axis=1.8,main="(l) 1300-1100 cal BP")
dev.off()
tiff("HanRiverBasinfocalchange3500-1100.tiff",width=9000,height=6000,res=500)
par(mfrow=c(3,4), mar=c(2,2,3,1))
plot(stkde, 3500, type="change",cex.main=3, cex.axis=1.8,font=2, main="(a) 3500-3300 cal BP")
plot(stkde, 3300, type="change",cex.main=3, cex.axis=1.8,font=2, main="(b) 3300-3100 cal BP")
plot(stkde, 3100, type="change",cex.main=3, cex.axis=1.8,font=2,main="(c) 3100-2900 cal BP")
plot(stkde, 2900, type="change",cex.main=3, cex.axis=1.8,font=2, main="(d) 2900-2700 cal BP")
plot(stkde, 2700, type="change",cex.main=3, cex.axis=1.8,font=2, main="(e) 2700-2500 cal BP")
plot(stkde, 2500, type="change",cex.main=3, cex.axis=1.8,font=2, main="(f) 2500-2300 cal BP")
plot(stkde, 2300, type="change",cex.main=3, cex.axis=1.8,font=2, main="(g) 2300-2100 cal BP")
plot(stkde, 2100, type="change",cex.main=3, cex.axis=1.8,font=2, main="(h) 2100-1900 cal BP")
plot(stkde, 1900, type="change",cex.main=3, cex.axis=1.8,font=2, main="(i) 1900-1700 cal BP")
plot(stkde, 1700, type="change",cex.main=3, cex.axis=1.8,font=2, main="(j) 1700-1500 cal BP")
plot(stkde, 1500, type="change",cex.main=3, cex.axis=1.8,font=2, main="(k) 1500-1300 cal BP")
plot(stkde, 1300, type="change",cex.main=3, cex.axis=1.8,font=2, main="(l) 1300-1100 cal BP")
dev.off()
getwd()
tiff("HanRiverBasinfocalintensity3500-1100.tiff",width=9000,height=6000,res=500)
par(mfrow=c(3,4), mar=c(2,2,3,1))
plot(stkde, 3500, type="focal",cex.main=3, cex.axis=1.8,main="(a) 3500-3300 cal BP")
plot(stkde, 3300, type="focal",cex.main=3, cex.axis=1.8,main="(b) 3300-3100 cal BP")
plot(stkde, 3100, type="focal",cex.main=3, cex.axis=1.8,main="(c) 3100-2900 cal BP")
plot(stkde, 2900, type="focal",cex.main=3, cex.axis=1.8, main="(d) 2900-2700 cal BP")
plot(stkde, 2700, type="focal",cex.main=3, cex.axis=1.8, main="(e) 2700-2500 calBP")
plot(stkde, 2500, type="focal",cex.main=3, cex.axis=1.8, main="(f) 2500-2300 cal BP")
plot(stkde, 2300, type="focal",cex.main=3, cex.axis=1.8, main="(g) 2300-2100 cal BP")
plot(stkde, 2100, type="focal",cex.main=3, cex.axis=1.8, main="(h) 2100-1900 cal BP")
plot(stkde, 1900, type="focal",cex.main=3, cex.axis=1.8, main="(i) 1900-1700 cal BP")
plot(stkde, 1700, type="focal",cex.main=3, cex.axis=1.8, main="(j) 1700-1500 cal BP")
plot(stkde, 1500, type="focal",cex.main=3, cex.axis=1.8, main="(k) 1500-1300 cal BP")
plot(stkde, 1300, type="focal",cex.main=3, cex.axis=1.8,main="(l) 1300-1100 cal BP")
dev.off()
# 데이터 읽기
Data <- read_csv(here("Data","After_Combine.csv"))
Data_clean <- Data %>% filter(is.na(Mismatch_Flag))
Site_Minmax <- Data_clean %>%
group_by(Site_Code, Sub_Region, Total_Houses, Period_New) %>%
summarise(
median_min = min(median, na.rm = TRUE),
median_max = max(median, na.rm = TRUE),
.groups = "drop"
)
# Counting Total Houses per sub region
Regional_Total_Houses <- Site_Minmax %>%
group_by(Sub_Region) %>%
summarise(
total_houses = sum(Total_Houses, na.rm = TRUE),
site_count = n_distinct(Site_Code),
.groups = "drop"
)
Regional_Total_Houses_Period <- Site_Minmax %>%
group_by(Sub_Region,Period_New) %>%
summarise(
total_houses = sum(Total_Houses, na.rm = TRUE),
site_count = n_distinct(Site_Code),
.groups = "drop"
)
# Create a sequence of time intervals
intervals <- seq(3500, 1100, by = -200)
# Function to calculate phases and phases string for each site
calculate_phases <- function(site_data) {
presence_phases <- 0
phases_string <- character(0)
for (i in (length(intervals) - 1):1) {
interval_start <- intervals[i]
interval_end <- intervals[i + 1]
min_val <- as.numeric(site_data[["median_min"]])
max_val <- as.numeric(site_data[["median_max"]])
if (is.na(min_val) || is.na(max_val)) next
if (max_val >= interval_end && min_val <= interval_start) {
presence_phases <- presence_phases + 1
phases_string <- c(phases_string, sprintf("%d-%d", interval_start, interval_end))
}
}
phases_string <- rev(phases_string)
return(c(presence_phases, paste(phases_string, collapse = ",")))
}
results <- t(apply(Site_Minmax, 1, calculate_phases))
# Add results to the data frame
Site_Minmax$presence_phases <- as.integer(results[, 1])
Site_Minmax$phases_string <- results[, 2]
# Calculate values based on number of presence phases
Site_Minmax$phase_weight <- round(1 / Site_Minmax$presence_phases, 2)
Site_Minmax$adjusted_house_count <- Site_Minmax$phase_weight * Site_Minmax$Total_Houses
# Remove sites with zero presence phases
Site_Minmax <- Site_Minmax %>% filter(presence_phases != 0)
# Expand rows so that each phase has a separate row
Site_Minmax <- separate_rows(Site_Minmax, phases_string, sep = ",")
# List of all unique phases present
unique(Site_Minmax$phases_string)
# Define phase orders and labels
phase_order <- c("3500-3300", "3300-3100", "3100-2900", "2900-2700",
"2700-2500", "2500-2300", "2300-2100", "2100-1900",
"1900-1700", "1700-1500", "1500-1300", "1300-1100")
phase_labels <- c("35-33", "33-31", "31-29", "29-27",
"27-25", "25-23", "23-21", "21-19",
"19-17", "17-15", "15-13", "13-11")
Site_Minmax$Sub_Region <- factor(Site_Minmax$Sub_Region, levels = c('Northern Gyeonggi',
'Southern Gyeonggi',
'North Han River Basin',
'South Han River Basin',
'West Coast'))
Site_Minmax_total <- Site_Minmax %>%
group_by(phases_string) %>%
summarise(
phase_weight = sum(phase_weight, na.rm = TRUE),
adjusted_house_count = sum(adjusted_house_count, na.rm = TRUE),
.groups = "drop"
) %>%
mutate(Sub_Region = "Han River Basin(Total)")
# Total plot1
plot1_total <- Site_Minmax_total %>%
ggplot(aes(x = phases_string, y = phase_weight)) +
geom_bar(stat = "identity", fill = "#80796BFF") +
facet_wrap(~ Sub_Region) +
theme(
legend.position = "none",
axis.text.x = element_blank(),
axis.text.y = element_text(size = 40, face = "bold"),
text = element_text(size = 40, face = "bold"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
strip.text = element_text(size = 50, face = "bold")
) +
scale_x_discrete(limits = phase_order, labels = phase_labels)
# Total plot2
plot2_total <- Site_Minmax_total %>%
ggplot(aes(x = phases_string, y = adjusted_house_count)) +
geom_bar(stat = "identity", fill = "#80796BFF") +
facet_wrap(~ Sub_Region) +
scale_y_continuous(position = "right") +
theme(
legend.position = "none",
axis.text.x = element_blank(),
axis.text.y = element_text(size = 40, face = "bold"),
text = element_text(size = 40, face = "bold"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),     # y축 제목 제거
strip.text = element_text(size = 50, face = "bold")
) +
scale_x_discrete(limits = phase_order, labels = phase_labels)
plot1_regions <- Site_Minmax %>%
ggplot(aes(x = phases_string, y = phase_weight, fill = Sub_Region)) +
geom_bar(stat = "identity") +
facet_wrap(~ Sub_Region, nrow = 5) +
scale_fill_jama() +
coord_cartesian(ylim = c(0, 30)) +
theme(
legend.position = "none",
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 40, face = "bold"),
axis.text.y = element_text(size = 40, face = "bold"),
text = element_text(size = 40, face = "bold"),
axis.title.x = element_text(margin = margin(t = 40), face = "bold"),
axis.title.y = element_text(margin = margin(r = 5), face = "bold"),
strip.text = element_text(size = 50, face = "bold")
) +
scale_x_discrete(limits = phase_order, labels = phase_labels) +
labs(x = "kyr cal BP", y = "Weighted Site Counts")
# Sub_Region plot2
plot2_regions <- Site_Minmax %>%
ggplot(aes(x = phases_string, y = adjusted_house_count, fill = Sub_Region)) +
geom_bar(stat = "identity") +
facet_wrap(~ Sub_Region, nrow = 5) +
scale_fill_jama() +
coord_cartesian(ylim = c(0, 600)) +
scale_y_continuous(position = "right", limits = c(0, 600)) +
theme(
legend.position = "none",
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 40, face = "bold"),
axis.text.y = element_text(size = 40, face = "bold"),
text = element_text(size = 40, face = "bold"),
axis.title.x = element_text(margin = margin(t = 40), face = "bold"),
axis.title.y = element_text(margin = margin(r = 5), face = "bold"),
strip.text = element_text(size = 50, face = "bold")
) +
scale_x_discrete(limits = phase_order, labels = phase_labels) +
labs(x = "kyr cal BP", y = "Weighted House Counts")
plot1_total <- plot1_total +
ggtitle("(a) Weighted Values of Site Counts") +
theme(plot.title = element_text(size = 43, face = "bold", hjust = 0.8))
plot2_total <- plot2_total +
ggtitle("(b) Weighted Values of Total Houses") +
theme(plot.title = element_text(size = 43, face = "bold", hjust = 0.8))
final_plot <- (plot1_total | plot2_total) / (plot1_regions | plot2_regions) +
plot_layout(heights = c(1, 5))
ggsave("combined_graphs_differential_y_JAMA_250604.tiff",
plot = final_plot,
width = 24,
height = 32,
units = "in",
dpi = 500)
ggsave("combined_graphs_differential_y_JAMA_250604.png",
plot = final_plot,
width = 24,
height = 32,
units = "in",
dpi = 500)
Data<- read.csv(here("Data", "/After_Combine.csv"))
png("HanRiverBasinfocalchange3500-1100.png",width=9000,height=6000,res=500)
par(mfrow=c(3,4), mar=c(2,2,3,1))
plot(stkde, 3500, type="change",cex.main=3, cex.axis=1.8,font=2, main="(a) 3500-3300 cal BP")
# Loading map
# http://www.gisdeveloper.co.kr/?p=2332
map_korea <- st_read(here("ctprvn_20230729", "CTPRVN.shp"))
png("HanRiverBasinfocalchange3500-1100.png",width=9000,height=6000,res=500)
par(mfrow=c(3,4), mar=c(2,2,3,1))
plot(stkde, 3500, type="change",cex.main=3, cex.axis=1.8,font=2, main="(a) 3500-3300 cal BP")
dir.create(file.path("im"), showWarnings = FALSE)
mapData <- convert_to_EPSG5179(Data_clean, lon_col = "Longitude", lat_col = "Latitude")
mapData.cal <- calibrate(x=mapData$BP, errors=mapData$error, normalised=TRUE)
Data<- read.csv(here("Data", "/After_Combine.csv"))
# Excluding outliers
Data_clean <- Data %>% filter(is.na(Mismatch_Flag)) %>% filter(!is.na(Longitude) & !is.na(Latitude))
# Loading map
# http://www.gisdeveloper.co.kr/?p=2332
map_korea <- st_read(here("ctprvn_20230729", "CTPRVN.shp"))
map_korea$CTPRVN_CD <- iconv(map_korea$CTPRVN_CD,
from = 'CP949',
to = 'UTF-8',
sub = NA)
# 2. Filtering for Han River basin
target_region_codes <- c('11', '41', '51')
subset_map <- map_korea %>% filter(CTPRVN_CD %in% target_region_codes)
# 3. Sf to spatial
subset_map_sp <- as(subset_map, "Spatial")
class(subset_map_sp)
Han_River_Basin<- as.owin(subset_map_sp)
plot(Han_River_Basin)
#Converting
convert_to_EPSG5179 <- function(data, lon_col, lat_col) {
crs_wgs84 <- st_crs(4326)
crs_korea2000 <- st_crs(5179)
input_sf <- st_as_sf(data.frame(longitude = data[[lon_col]], latitude = data[[lat_col]]),
coords = c("longitude", "latitude"), crs = crs_wgs84)
output_sf <- st_transform(input_sf, crs = crs_korea2000)
output_df <- st_coordinates(output_sf)
cbind(data, output_df)
}
dir.create(file.path("im"), showWarnings = FALSE)
mapData <- convert_to_EPSG5179(Data_clean, lon_col = "Longitude", lat_col = "Latitude")
mapData.cal <- calibrate(x=mapData$BP, errors=mapData$error, normalised=TRUE)
stkde <- stkde(x=mapData.cal, coords=mapData[,c("X","Y")],
win=Han_River_Basin, sbw=40000, cellres=5000, focalyears=seq(3500, 1100, -200),
tbw=50, bins=NA, backsight=200, outdir="im")
png("HanRiverBasinfocalchange3500-1100.png",width=9000,height=6000,res=500)
par(mfrow=c(3,4), mar=c(2,2,3,1))
plot(stkde, 3500, type="change",cex.main=3, cex.axis=1.8,font=2, main="(a) 3500-3300 cal BP")
plot(stkde, 3300, type="change",cex.main=3, cex.axis=1.8,font=2, main="(b) 3300-3100 cal BP")
plot(stkde, 3100, type="change",cex.main=3, cex.axis=1.8,font=2,main="(c) 3100-2900 cal BP")
plot(stkde, 2900, type="change",cex.main=3, cex.axis=1.8,font=2, main="(d) 2900-2700 cal BP")
plot(stkde, 2700, type="change",cex.main=3, cex.axis=1.8,font=2, main="(e) 2700-2500 cal BP")
plot(stkde, 2500, type="change",cex.main=3, cex.axis=1.8,font=2, main="(f) 2500-2300 cal BP")
plot(stkde, 2300, type="change",cex.main=3, cex.axis=1.8,font=2, main="(g) 2300-2100 cal BP")
plot(stkde, 2100, type="change",cex.main=3, cex.axis=1.8,font=2, main="(h) 2100-1900 cal BP")
plot(stkde, 1900, type="change",cex.main=3, cex.axis=1.8,font=2, main="(i) 1900-1700 cal BP")
plot(stkde, 1700, type="change",cex.main=3, cex.axis=1.8,font=2, main="(j) 1700-1500 cal BP")
plot(stkde, 1500, type="change",cex.main=3, cex.axis=1.8,font=2, main="(k) 1500-1300 cal BP")
plot(stkde, 1300, type="change",cex.main=3, cex.axis=1.8,font=2, main="(l) 1300-1100 cal BP")
dev.off()
png("HanRiverBasinfocalintensity3500-1100.png",width=9000,height=6000,res=500)
par(mfrow=c(3,4), mar=c(2,2,3,1))
plot(stkde, 3500, type="focal",cex.main=3, cex.axis=1.8,main="(a) 3500-3300 cal BP")
plot(stkde, 3300, type="focal",cex.main=3, cex.axis=1.8,main="(b) 3300-3100 cal BP")
plot(stkde, 3100, type="focal",cex.main=3, cex.axis=1.8,main="(c) 3100-2900 cal BP")
plot(stkde, 2900, type="focal",cex.main=3, cex.axis=1.8, main="(d) 2900-2700 cal BP")
plot(stkde, 2700, type="focal",cex.main=3, cex.axis=1.8, main="(e) 2700-2500 calBP")
plot(stkde, 2500, type="focal",cex.main=3, cex.axis=1.8, main="(f) 2500-2300 cal BP")
plot(stkde, 2300, type="focal",cex.main=3, cex.axis=1.8, main="(g) 2300-2100 cal BP")
plot(stkde, 2100, type="focal",cex.main=3, cex.axis=1.8, main="(h) 2100-1900 cal BP")
plot(stkde, 1900, type="focal",cex.main=3, cex.axis=1.8, main="(i) 1900-1700 cal BP")
plot(stkde, 1700, type="focal",cex.main=3, cex.axis=1.8, main="(j) 1700-1500 cal BP")
plot(stkde, 1500, type="focal",cex.main=3, cex.axis=1.8, main="(k) 1500-1300 cal BP")
plot(stkde, 1300, type="focal",cex.main=3, cex.axis=1.8,main="(l) 1300-1100 cal BP")
dev.off()
install.packages("bydem")
library(bydem)
library(devtools)
install.packages("devtools")
library(devtools)
install.packages("rstan")
install_github("eehh-stanford/baydem")
library(bydem)
install.packages("bchron")
remotes::install_github("andrewcparnell/Bchron")
install.packages(c("numDeriv", "truncnorm", "rcpp"))
remotes::install_github("andrewcparnell/Bchron")
if(!require(remotes)) install.packages('remotes')
remotes::install_github('andrewcparnell/Bchron')
install_github("eehh-stanford/baydem")
install.packages('Bchron')
version
